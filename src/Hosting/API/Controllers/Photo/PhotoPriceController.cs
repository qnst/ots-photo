//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QN.Ots.Photo.API.Hosting.Controllers
{
    using Microsoft.AspNetCore.Mvc;
    using QN.EDF.Common;
    using QN.EDF.Model;
    using QN.Ots.Photo.Core.BusinessEntity;
    using QN.Ots.Photo.Core.ServiceInterface;
    using QN.Ots.Photo.API.Hosting.Framework;
    using QN.Ots.Photo.Photo.BusinessEntity;
    using QN.Ots.Photo.Photo.ServiceInterface;
    
    
    public class PhotoPriceController : PhotoAPIBaseController
    {
        
        private static IPhotoPriceSI si = QNInjection.Build<IPhotoPriceSI>();
        
        private static IHttpContextAccessor http = QNInjection.Build<IHttpContextAccessor>();
        
        private static IWebHostEnvironment webHost = QNInjection.Build<IWebHostEnvironment>();
        
        [HttpPost()]
        [Route("photo/list-photo-price")]
        public IActionResult GetPhotoPricePaging([FromBody] PageRequest<PhotoPriceBiz> data)
        {

            BizData<(List<PhotoPriceBiz>, int)> bizResponse = si.GetPhotoPricePaging(data);
            var apiData = bizResponse.Transfer<PhotoPriceBiz, List<PhotoPriceBiz>>(data.Current, data.PageSize);
            return Ok(apiData);
        }
        
        [HttpPost()]
        [Route("photo/add-photo-price")]
        public IActionResult AddPhotoPrice([FromBody] PhotoPriceBiz data)
        {

            BizData<int> bizResponse = si.AddPhotoPrice(new List<PhotoPriceBiz>() {data});
            var apiData = bizResponse.Transfer<ApiData<int>>();
            return Ok(apiData);
        }
        
        [HttpPost()]
        [Route("photo/update-photo-price")]
        public IActionResult UpdatePhotoPrice([FromBody] PhotoPriceBiz data)
        {

            BizData<int> bizResponse = si.UpdatePhotoPrice(new List<PhotoPriceBiz>() {data});
            var apiData = bizResponse.Transfer<ApiData<int>>();
            return Ok(apiData);
        }
        
        [HttpGet()]
        [Route("photo/detail-photo-price")]
        public IActionResult GetPhotoPriceDetail([FromQuery] PhotoPriceBiz data)
        {

            BizData<PhotoPriceBiz> bizResponse = si.GetPhotoPriceDetail(data);
            var apiData = bizResponse.Transfer<ApiData<PhotoPriceBiz>>();
            return Ok(apiData);
        }
        
        [HttpPost()]
        [Route("photo/delete-photo-price")]
        public IActionResult DeletePhotoPrice([FromBody] QNIDParamBiz data)
        {

            BizData<int> bizResponse = si.DeletePhotoPrice(data);
            var apiData = bizResponse.Transfer<ApiData<int>>();
            return Ok(apiData);
        }
        
        [HttpPost()]
        [Route("photo/export-photo-price")]
        public IActionResult ExportPhotoPrice()
        {

            BizData<QNExcelExportData> biz = si.ExportPhotoPrice(new PageRequest<PhotoPriceBiz>());
            FileStreamResult fsr = File(biz.Data.ExportStream, biz.Data.OutFormat, biz.Data.FileName);
            return fsr;
        }
    }
}
