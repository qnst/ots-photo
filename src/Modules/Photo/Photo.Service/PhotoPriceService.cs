//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QN.Ots.Photo.Photo.Service
{
    using QN.EDF.Common;
    using QN.EDF.Model;
    using Microsoft.Extensions.Hosting;
    using QN.EDF.Common.Util;
    using Microsoft.Extensions.Configuration;
    using Microsoft.AspNetCore.Http;
    using QN.Ots.Photo.Framework;
    using QN.Ots.Photo.Photo.BusinessComponent;
    using QN.Ots.Photo.Photo.BusinessEntity;
    using QN.Ots.Photo.Photo.ServiceInterface;
    
    
    public class PhotoPriceService : IPhotoPriceSI
    {
        
        private PhotoPriceBusinessComponent bc = QNInjection.Build<PhotoPriceBusinessComponent>();
        
        private IHttpContextAccessor http = QNInjection.Build<IHttpContextAccessor>();
        
        public BizData<(List<PhotoPriceBiz>, int)> GetPhotoPricePaging(PageRequest<PhotoPriceBiz> data)
        {
            var boData = data.Transfer<PageRequest<PhotoPriceBO>>();
            var result = bc.GetPhotoPricePaging(boData);

            var bizResponse = new BizData<(List<PhotoPriceBiz>, int)>()
            {
                Code = 200,
                Success = true,
                Msg = "succeed",
                Data = (result.Item1.Transfer<List<PhotoPriceBiz>>(), result.Item2)
            };

            return bizResponse;
        }
        
        public BizData<List<PhotoPriceBiz>> GetPhotoPrice(QueryRequest<PhotoPriceBiz> data)
        {
            var boData = data.Transfer<QueryRequest<PhotoPriceBO>>();
            var result = bc.GetPhotoPrice(boData);

            var bizResponse = new BizData<List<PhotoPriceBiz>>()
            {
                Code = 200,
                Success = true,
                Msg = "succeed",
                Data = result.Transfer<List<PhotoPriceBiz>>()
            };

            return bizResponse;
        }
        
        public BizData<PhotoPriceBiz> GetPhotoPriceDetail(PhotoPriceBiz data)
        {
            var list = GetPhotoPrice(new QueryRequest<PhotoPriceBiz>() { Data = data });

            var bizResponse = new BizData<PhotoPriceBiz>()
            {
                Code = 200,
                Success = true,
                Msg = "succeed",
                Data = list.Data.FirstOrDefault()
            };

            return bizResponse;
        }
        
        public BizData<int> AddPhotoPrice(List<PhotoPriceBiz> data)
        {
            data.ForEach(p => p.FillCommonFields());
            var boData = data.Transfer<List<TPhotoPrice>>();
            var result = bc.AddPhotoPrice(boData);
            return new BizData<int>() { Code = 200, Success = true, Msg = "succeed", Data = result };
        }
        
        public BizData<int> UpdatePhotoPrice(List<PhotoPriceBiz> data)
        {
            data.ForEach(p => p.FillCommonFields());
            var boData = data.Transfer<List<TPhotoPrice>>();
            var result = bc.UpdatePhotoPrice(boData);
            return new BizData<int>() { Code = 200, Success = true, Msg = "succeed", Data = result };
        }
        
        public BizData<int> DeletePhotoPrice(QNIDParamBiz data)
        {
            var boData = data.Transfer<QNIDParam>();
            var result = bc.DeletePhotoPrice(boData);
            return new BizData<int>() { Code = 200, Success = true, Msg = "succeed", Data = result };
        }
        
        public BizData<int> DataStatusPhotoPrice(QNIDParamBiz data)
        {
            var boData = data.Ids.Select(x => new PhotoPriceBiz() { Id = x.Id, DataStatus = x.IsPhysical }).ToList();
            var result = UpdatePhotoPrice(boData);
            return new BizData<int>() { Code = 200, Success = true, Msg = "succeed", Data = result.Data };
        }
        
        public BizData<QNExcelExportData> ExportPhotoPrice(PageRequest<PhotoPriceBiz> data)
        {
            //1.获取数据
            List<PhotoPriceBiz> exportData = GetPhotoPricePaging(data).Data.Item1;

            //2.拼装参数
            var env = QNInjection.Build<IHostingEnvironment>();

            var fileName = $"PhotoPriceBiz_{DateTime.Now.ToString("yyyymmddHHmmss") + DateTime.Now.Millisecond + QNUtils.RandNum(4)}.xlsx";

            var filePath = env.ContentRootPath + "\\wwwroot\\excel\\download\\";
            var fullPath = $"{filePath}{fileName}";

            QNExcelExportModel<PhotoPriceBiz> exportParam = new QNExcelExportModel<PhotoPriceBiz>()
            {
                Header = new Dictionary<string, string>()
                {
                    [""] = "序号",
                },
                Data = exportData,
                ExportType = "",
                FileName = fileName,
                FilePath = fullPath
            };

            //3.调用公用方法生成导出数据

            var result = QNExcelHelper.ExportExcel(exportParam);

            return new BizData<QNExcelExportData>() { Data = result };
        }
    }
}
